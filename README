Licensing
---------

All contents of this repository including code and data are copyright
2011 The Open University and are released under the GNU Public License
version 3 (see LICENSE), except:

* JEuclid and dependencies in lib/jeuclid folder:
  http://jeuclid.sourceforge.net/
  Released under Apache Software License version 2.
  
* TeX to MathML conversion code (two Java files in uk.ac.open.lts.webmaths.tex)
  Modified and ported-to-Java version of code by Steve Cheng:
  http://www.gold-saucer.org/mathml/greasemonkey/dist/display-latex
  Released under custom license (see relevant source files).

* UTF-8 converter (misc/utf8.inc)
  Henri Sivonen, Netscape Communications Corporation
  http://iki.fi/hsivonen/php-utf8/

* MathML entity data files (text files)
  Based on entity files provided by W3C as part of MathML 2, with note:
  (C) International Organization for Standardization 1991
      Permission to copy in any form is granted for use with
      conforming SGML systems and applications as defined in
      ISO 8879, provided this notice is included in all copies.

* Quivira font in lib/extrafonts
  http://www.quivira-font.com/
  'Quivira is free to use for any purpose, including commercial usage. You may
  also redistribute Quivira freely, but please do not alter it and do not claim
  it to be your own work'.
  (C) Alexander Lange

Basic build/setup instructions for testing
------------------------------------------

1) Run the ant build script with the 'wsdlgen' target. This will create the
   'gen' folder based on the WSDL files. 
   
   In order for this to work you will need to set the Ant property
   jaxws.home to point to the folder of JAX-WS 2.1 install; get this from
   Oracle if you don't already have it.

2) If you want your IDE to compile the project:
   a) Refresh the project if necessary to see the 'gen' folder.
      -> In Eclipse, right-click the project root and choose Refresh. 
   b) Add the 'gen' and 'test' folders to your IDE's source path. (The 'src'
      folder has probably been included by default, but if not, add that too.)
      -> In Eclipse, right-click the folder and choose Build path /
         Use as source folder.
   c) Add all the library .jar files in 'lib' to the IDE's build path.
      -> In Eclipse, right-click and choose Build path / Add to build path.

3) You can now run the services locally on the built-in Java 6 test server
   by running uk.ac.open.lts.webmaths.DevServer 
   -> In Eclipse, right-click this file and choose Run as / Java application.

4) You can also run unit tests by running JUnit on the 'test' folder.
   -> In Eclipse, right-click this folder and choose Run as / JUnit test. 
   
5) To build the web application, run the ant script with the 'webinf' target.
   This will create a WEB-INF folder. You will need to set the Ant property
   webinf.location to the folder where you want to put the WEB-INF folder.
   Any existing WEB-INF folder at that location will be deleted.

6) To build the web application as a .war file, run ant script with the 'war'
   target. Again, you can set the Ant property war.location to the folder
   where you want to put the .war file.
